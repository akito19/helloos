     1                                  ;hello-os
     2                                  ;TAB = 4
     3                                  
     4                                  CYLS	EQU		10     ; => CYLS=10 シリンダをどこまで読み込むか
     5                                  
     6                                  	ORG		0x7c00     ; ブートセクタが読み込まれるアドレスの１つ
     7                                  
     8                                  ; Description for FAT12 format floppy
     9 00000000 EB4E                    	JMP		entry
    10 00000002 90                      	DB		0x90
    11 00000003 48415249424F5445        	DB		"HARIBOTE"
    12 0000000B 0002                    	DW		512
    13 0000000D 01                      	DB		1
    14 0000000E 0100                    	DW		1
    15 00000010 02                      	DB		2
    16 00000011 E000                    	DW		224
    17 00000013 400B                    	DW		2880
    18 00000015 F0                      	DB		0xf0
    19 00000016 0900                    	DW		9
    20 00000018 1200                    	DW		18
    21 0000001A 0200                    	DW		2
    22 0000001C 00000000                	DD		0
    23 00000020 400B0000                	DD		2880
    24                                  
    25                                  	; FAT 12/16 におけるオフセット36以降のフィールド
    26 00000024 00                      	DB		0x00
    27 00000025 00                      	DB		0x00
    28 00000026 29                      	DB		0x29
    29                                  
    30 00000027 FFFFFFFF                	DD		0xffffffff
    31 0000002B 48617269626F74654F-     	DB		"HariboteOS "
    31 00000034 5320               
    32 00000036 4641543132202020        	DB		"FAT12   "
    33                                  	; See: http://hrb.osask.jp/wiki/?tools/nask
    34                                  	; RESB	18
    35 0000003E 00<rept>                	TIMES 18 DB 0
    36                                  
    37                                  ; Boot sector
    38                                  entry:
    39 00000050 B80000                  	MOV		AX,0        ; MOV means substitution.
    40 00000053 8ED0                    	MOV		SS,AX       ; AX, SS, SP, DS, ES are registers.
    41 00000055 BC007C                  	MOV		SP,0x7c00
    42 00000058 8ED8                    	MOV		DS,AX
    43 0000005A 8EC0                    	MOV		ES,AX
    44                                  
    45 0000005C B82008                  	MOV		AX,0x0820
    46 0000005F 8EC0                    	MOV		ES,AX
    47 00000061 B500                    	MOV		CH,0        ; シリンダ0
    48 00000063 B600                    	MOV		DH,0        ; ヘッド0
    49 00000065 B102                    	MOV		CL,2        ; セクタ2
    50                                  
    51                                  readloop:
    52 00000067 BE0000                  	MOV		SI,0        ; 失敗回数を数えるレジスタ
    53                                  
    54                                  retry:
    55 0000006A B402                    	MOV		AH,0x02     ; AH = 0x02 : ディスク読み込み
    56 0000006C B001                    	MOV		AL,1        ; 1 セクタ
    57 0000006E BB0000                  	MOV		BX,0        ; ES = 0x0820, BX = 0 なので，このディスクが読み込まれるデータは 0x8200 番地から 0x83ff 番地
    58 00000071 B200                    	MOV		DL,0x00     ; Aドライブ
    59 00000073 CD13                    	INT		0x13        ; ディスクBIOS呼び出し
    60 00000075 7310                    	JNC		next         ; エラーが起きなければ next へ
    61 00000077 83C601                  	ADD		SI,1        ; SI に 1 を加算
    62 0000007A 83FE05                  	CMP		SI,5        ; SI と 5 を比較
    63 0000007D 7332                    	JAE		error       ; SI >= 5 ならば error へ
    64 0000007F B400                    	MOV		AH,0x00     ; この行から3行はエラー時に実行するシステムリセット関連
    65 00000081 B200                    	MOV		DL,0x00     ; Aドライブ
    66 00000083 CD13                    	INT		0x13        ; ドライブのリセット
    67 00000085 EBE3                    	JMP		retry
    68                                  
    69                                  next:
    70 00000087 8CC0                    	MOV		AX,ES       ; アドレスを 0x200 進める. 0x20 == 512 / 16 の16進表記
    71 00000089 83C020                  	ADD		AX,0x0020
    72 0000008C 8EC0                    	MOV		ES,AX       ; ADD ES,0x020 命令がないので代替らしい
    73 0000008E 80C101                  	ADD		CL,1        ; 次のセクタを読み込むために 1 を加算
    74 00000091 80F912                  	CMP		CL,18
    75 00000094 76D1                    	JBE   readloop    ; CL <= 18 ならば readloop へ
    76 00000096 B101                    	MOV		CL,1
    77 00000098 80C601                  	ADD		DH,1
    78 0000009B 80FE02                  	CMP		DH,2
    79 0000009E 72C7                    	JB		readloop    ; DH < 2 ならば readloop へ
    80 000000A0 B600                    	MOV		DH,0
    81 000000A2 80C501                  	ADD		CH,1
    82 000000A5 80FD0A                  	CMP		CH,CYLS
    83 000000A8 72BD                    	JB		readloop    ; CH < CYLS ならば readloop へ
    84                                  
    85 000000AA 882EF00F                	MOV		[0x0ff0],CH ; 0x0ff0 のアドレスにシリンダのカウント数を書き込む(どこまでディスクを書き込んだのか)
    86 000000AE E9(00C2)                	JMP		0xc200      ; OS 本体の実行
    87                                  
    88                                  error:
    89 000000B1 BE[C900]                	MOV		SI,msg
    90                                  
    91                                  putloop:
    92 000000B4 8A04                    	MOV		AL,[SI]     ; MOV AL, BYTE[SI] ともかけるが，AL が4 bitであり，bit数を揃えなければならないので，BYTE は省略.
    93 000000B6 83C601                  	ADD		SI,1
    94 000000B9 3C00                    	CMP		AL,0
    95 000000BB 7409                    	JE		fin         ; => if (AL == 0) { goto fin }
    96 000000BD B40E                    	MOV		AH,0x0e     ; AH = 0x0e
    97 000000BF BB0F00                  	MOV		BX,15       ; BH = 0; BL = color code
    98 000000C2 CD10                    	INT		0x10        ; Call the function where is in `0x10` for operate video card from BIOS.
    99 000000C4 EBEE                    	JMP		putloop
   100                                  
   101                                  fin:
   102 000000C6 F4                      	HLT
   103 000000C7 EBFD                    	JMP		fin         ; Infinit loop
   104                                  
   105                                  ; Except boot sector
   106                                  msg:
   107 000000C9 0A0A                    	DB		0x0a,0x0a
   108 000000CB 4C6F6164206572726F-     	DB		"Load error"
   108 000000D4 72                 
   109 000000D5 0A                      	DB		0x0a
   110 000000D6 00                      	DB		0
   111                                  	; RESB	0x7dfe-0x7c00-($-$$)  ; 現在地から 0x1fd までの未使用領域を0で埋める. 7c00はブートセクタのスタートなので，その分を引く
   112                                  	; See: https://nasm.us/doc/nasmdoc3.html
   113 000000D7 00<rept>                	TIMES 0x1fe-($-$$) DB 0
   114                                  
   115                                  ; BS_BootCode
   116 000001FE 55AA                    	DB		0x55,0xaa
