     1                                  BOTPAK  EQU	0x00280000    ; bootpackのロード先
     2                                  DSKCAC  EQU	0x00100000    ; ディスクキャッシュの場所
     3                                  DSKCAC0 EQU	0x00008000    ; ディスクキャッシュの場所（リアルモード）
     4                                  
     5                                  ; BOOT_INFO 関係
     6                                  CYLS 	EQU		0x0ff0      ; ブートセクタが設定する
     7                                  LEDS	EQU		0x0ff1
     8                                  VMODE	EQU		0x0ff2      ; 色数に関する情報．何ビットカラーか
     9                                  SCRNX	EQU		0x0ff4      ; 解像度のX
    10                                  SCRNY	EQU		0x0ff6      ; 解像度のY
    11                                  VRAM	EQU		0x0ff8      ; video RAM, Graphic buffer の開始番地
    12                                  
    13                                  			ORG		0xc200      ; disk image上の 0x004200 に相当する位置でプログラムを実行する. ref haribote.img
    14                                  									      ; boot sector 0x8000 番地に来るように，ディスクをメモリに読み込んでいるので，
    15                                  									      ; ORG <- 0x8000 + 0x4200
    16 00000000 B013                    			MOV		AL,0x13     ; VGA graphics, 320x200x8bit color, 画面モード切り替え
    17 00000002 B400                    			MOV		AH,0x00
    18 00000004 CD10                    			INT		0x10
    19                                  
    20 00000006 C606F20F08              			MOV		BYTE [VMODE],8   ; 画面モードをメモする
    21 0000000B C706F40F4001            			MOV		WORD [SCRNX],320
    22 00000011 C706F60FC800            			MOV		WORD [SCRNY],200
    23 00000017 66C706F80F00000A00      			MOV		DWORD [VRAM],0x000a0000
    24                                  
    25                                  			; キーボードのLED状態をBIOSに教えてもらう
    26                                  			; AL == 状態コード
    27                                  			;     bit0 : Right shift
    28                                  			;     bit1 : Left shift
    29                                  			;     bit2 : Ctrl
    30                                  			;     bit3 : Alt
    31                                  			;     bit4 : ScrollLock
    32                                  			;     bit5 : NumLock
    33                                  			;     bit6 : CapsLock
    34                                  			;     bit7 : Insert Mode
    35 00000020 B402                    			MOV		AH,0x02     ; キーロック&シフト状態取得
    36 00000022 CD16                    			INT		0x16        ; keyboard BIOS
    37 00000024 A2F10F                  			MOV		[LEDS],AL
    38                                  
    39 00000027 B0FF                    			MOV		AL,0xff     ; PICが一切の割り込みを受け付けないように
    40 00000029 E621                    			OUT		0x21,AL
    41 0000002B 90                      			NOP
    42 0000002C E6A1                    			OUT		0xa1,AL
    43 0000002E FA                      			CLI               ; CPUレベルでの割り込みも禁止する
    44                                  
    45                                  			; CPUから1MB以上のメモリにアクセスできるように，A20GATEを設定
    46 0000002F E8AE00                  			CALL	waitkbdout
    47 00000032 B0D1                    			MOV		AL,0xd1
    48 00000034 E664                    			OUT		0x64,AL
    49 00000036 E8A700                  			CALL	waitkbdout
    50                                  
    51                                  			; protect mode
    52                                  			; [INSTRSET "i486p"] -> i486の命令で使いたい
    53                                  			; ここで指定せず，gcc compile 時に指定
    54 00000039 0F0116[1A01]            			LGDT	[GDTR0]         ; 暫定GDT
    55 0000003E 0F20C0                  			MOV		EAX,CR0
    56 00000041 6625FFFFFF7F            			AND		EAX,0x7fffffff  ; ページング禁止のため，bit31に0にする．
    57 00000047 6683C801                			OR		EAX,0x00000001  ; プロテクトモード移行のため，bit0を1にする．
    58 0000004B 0F22C0                  			MOV		CR0,EAX
    59 0000004E EB00                    			JMP		pipelineflush
    60                                  
    61                                  pipelineflush:
    62 00000050 B80800                  			MOV		AX,1*8      ; 読み書き可能セグメント 32 bit
    63 00000053 8ED8                    			MOV		DS,AX
    64 00000055 8EC0                    			MOV		ES,AX
    65 00000057 8EE0                    			MOV		FS,AX
    66 00000059 8EE8                    			MOV		GS,AX
    67 0000005B 8ED0                    			MOV		SS,AX
    68                                  
    69                                  			; bootpackの転送
    70 0000005D 66BE[20010000]          			MOV		ESI,bootpack  ; 転送元
    71 00000063 66BF00002800            			MOV		EDI,BOTPAK    ; 転送先
    72 00000069 66B900000200            			MOV		ECX,512*1024/4
    73 0000006F E87500                  			CALL	memcpy
    74                                  
    75                                  			; disk dataを本来の位置へ転送
    76                                  
    77                                  			; Boot sector
    78 00000072 66BE007C0000            			MOV		ESI,0x7c00    ; 転送先
    79 00000078 66BF00001000            			MOV		EDI,DSKCAC    ; 転送先
    80 0000007E 66B980000000            			MOV		ECX,512/4
    81 00000084 E86000                  			CALL	memcpy
    82                                  
    83                                  			; Others
    84 00000087 66BE00820000            			MOV		ESI,DSKCAC0+512  ; 転送元
    85 0000008D 66BF00021000            			MOV		EDI,DSKCAC+512   ; 転送先
    86 00000093 66B900000000            			MOV		ECX,0
    87 00000099 8A0EF00F                			MOV		CL,BYTE [CYLS]
    88 0000009D 6669C900120000          			IMUL	ECX,512*18*2/4   ; シリンダ数からbyte数/4 に変換
    89 000000A4 6681E980000000          			SUB		ECX,512/4        ; IPLの分だけ差し引く
    90 000000AB E83900                  			CALL	memcpy
    91                                  
    92                                  			; asmhead でしなければいけないことは終わったので，
    93                                  			; 残りは bootpack の仕事
    94                                  
    95                                  			; bootpack の起動
    96 000000AE 66BB00002800            			MOV		EBX,BOTPAK
    97 000000B4 66678B4B10              			MOV		ECX,[EBX+16]
    98 000000B9 6683C103                			ADD		ECX,3            ; ECX += 3;
    99 000000BD 66C1E902                			SHR		ECX,2            ; ECX /= 4;
   100 000000C1 7410                    			JZ		skip             ; 転送すべきものがない
   101 000000C3 66678B7314              			MOV		ESI,[EBX+20]     ; 転送元
   102 000000C8 6601DE                  			ADD		ESI,EBX
   103 000000CB 66678B7B0C              			MOV		EDI,[EBX+12]     ; 転送先
   104 000000D0 E81400                  			CALL  memcpy
   105                                  
   106                                  skip:
   107 000000D3 66678B630C              			MOV		ESP,[EBX+12]     ; スタック初期値
   108 000000D8 66EA1B0000001000        			JMP		DWORD 2*8:0x0000001b
   109                                  
   110                                  waitkbdout:
   111 000000E0 E464                    			IN		AL,0x64
   112 000000E2 2402                    			AND		AL,0x02
   113 000000E4 75FA                    			JNZ		waitkbdout      ; AND の結果が 0 でなければ waitbdout へ
   114 000000E6 C3                      			RET
   115                                  
   116                                  memcpy:
   117 000000E7 66678B06                			MOV		EAX,[ESI]
   118 000000EB 6683C604                			ADD		ESI,4
   119 000000EF 66678907                			MOV		[EDI],EAX
   120 000000F3 6683C704                			ADD		EDI,4
   121 000000F7 6683E901                			SUB		ECX,1
   122 000000FB 75EA                    			JNZ		memcpy          ; SUB の結果が 0 でなければ memcpy へ
   123 000000FD C3                      			RET
   124                                  			; memcpy はアドレスサイズプリフィクスを入れ忘れなければ，ストリング命令でも書ける
   125 000000FE <res 00000002>          			ALIGNB 16
   125          ******************       warning: uninitialized space declared in .text section: zeroing
   126                                  
   127                                  GDT0:
   128 00000100 <res 00000008>          			RESB	8     ; null sector
   128          ******************       warning: uninitialized space declared in .text section: zeroing
   129 00000108 FFFF00000092CF00        			DW		0xffff,0x0000,0x9200,0x00cf   ; 読み書き可能セグメント 32 bit
   130 00000110 FFFF0000289A4600        			DW		0xffff,0x0000,0x9a28,0x0046   ; 実行可能セグメント 32bit(for bootpack)
   131                                  
   132 00000118 0000                    			DW		0
   133                                  
   134                                  GDTR0:
   135 0000011A 1700                    			DW		8*3-1
   136 0000011C [00010000]              			DD		GDT0
   137                                  
   138                                  			ALIGNB	16
   139                                  
   140                                  bootpack:
   141                                  
